{"version":3,"sources":["components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","components/Loader/Loader.tsx","api.ts","components/PeopleLink/PeopleLink.tsx","contexts/PeopleContext/PeopleContext.tsx","components/ParentsLink/ParentsLink.tsx","types/SearchParams.ts","types/SortFields.ts","components/PeopleTable/PeopleTable.tsx","types/FilterKeys.ts","components/PeopleFilters.tsx","components/PeoplePage/PeoplePage.tsx","components/NavBar/NavBar.tsx","App.tsx","index.tsx"],"names":["HomePage","className","NotFoundPage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeopleLink","person","useSearchParams","searchParams","slug","sex","name","to","pathname","search","toString","classNames","DEFAULT_PEOPLE_CONTEXT","people","setPeople","PeopleContext","createContext","PeopleProvider","children","useState","Provider","value","ParentsLink","parentName","useContext","personByName","find","SearchParms","SortFields","SortOrder","PeopleTable","useParams","hasSortAsc","linkName","get","Sort","has","Order","hasSortDesc","changeParamsClick","newParams","URLSearchParams","set","Desc","delete","length","Object","values","map","columnName","born","died","motherName","fatherName","SexFilter","SenturyFilter","PeopleFilters","setSearchParams","handleCenturiesLink","paramValue","newSerchParams","Centuries","centuriesList","getAll","includes","filter","cent","forEach","el","append","handleFilterLink","paramKey","isResetAllActive","Sex","Query","entries","key","All","type","placeholder","onChange","event","preventDefault","target","handleResetAllFilters","PeoplePage","isLoad","setIsLoad","isError","setIsError","isShowLoad","isShowError","isShowNoPeople","isShowPeople","useEffect","sortOrder","sortKey","modifiedPeople","slice","sort","person1","person2","Name","localeCompare","Born","Died","sexFilterParam","centuriesFilterParam","queryFilterParam","centuryCondition","sexCondition","queryCondition","validSexParam","trim","toLowerCase","getModifiedPeople","handleNavLinkClass","isActive","NavBar","role","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.9643e2eb.chunk.js","sourcesContent":["export const HomePage = () => {\n  return <h1 className=\"title\">Home Page</h1>;\n};\n","export const NotFoundPage = () => {\n  return <h1 className=\"title\">Page not found</h1>;\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nconst FEMALE_SEX = 'f';\n\nexport const PeopleLink: React.FC<Props> = ({ person }) => {\n  const [searchParams] = useSearchParams();\n  const { slug, sex, name } = person;\n\n  return (\n    <Link\n      to={{ pathname: `${slug}`, search: searchParams.toString() }}\n      className={classNames({\n        'has-text-danger': sex === FEMALE_SEX,\n      })}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { createContext, useState } from 'react';\nimport { Person } from '../../types';\n\ntype PeopleContextType = {\n  people: Person[];\n  setPeople: (people: Person[]) => void;\n};\n\nconst DEFAULT_PEOPLE_CONTEXT: PeopleContextType = {\n  people: [],\n  setPeople: () => { },\n};\n\nexport const PeopleContext = createContext(DEFAULT_PEOPLE_CONTEXT);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const PeopleProvider: React.FC<Props> = ({ children }) => {\n  const [people, setPeople] = useState<Person[]>([]);\n\n  return (\n    <PeopleContext.Provider value={{ people, setPeople }}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import { useContext } from 'react';\nimport { PeopleContext } from '../../contexts/PeopleContext';\nimport { PeopleLink } from '../PeopleLink';\n\ntype Props = {\n  parentName: string | null;\n};\n\nexport const ParentsLink: React.FC<Props> = ({ parentName }) => {\n  const { people } = useContext(PeopleContext);\n\n  if (!parentName) {\n    return <>-</>;\n  }\n\n  const personByName = people.find(({ name }) => name === parentName);\n\n  if (personByName) {\n    return <PeopleLink person={personByName} />;\n  }\n\n  return <>{parentName}</>;\n};\n","export enum SearchParms {\n  Sort = 'sort',\n  Order = 'order',\n  Sex = 'sex',\n  Query = 'query',\n  Centuries = 'centuries',\n}\n","export enum SortFields {\n  Name = 'name',\n  Sex = 'sex',\n  Born = 'born',\n  Died = 'died',\n}\n\nexport enum SortOrder {\n  Asc = 'asc',\n  Desc = 'desc',\n}\n","import React from 'react';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\nimport { PeopleLink } from '../PeopleLink';\nimport { ParentsLink } from '../ParentsLink';\nimport { SearchParms } from '../../types/SearchParams';\nimport { SortFields, SortOrder } from '../../types/SortFields';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [searchParams] = useSearchParams();\n  const { slug } = useParams();\n\n  const hasSortAsc = (linkName: string) => (\n    searchParams.get(SearchParms.Sort) === linkName\n    && !searchParams.has(SearchParms.Order)\n  );\n\n  const hasSortDesc = (linkName: string) => (\n    searchParams.get(SearchParms.Sort) === linkName\n    && searchParams.has(SearchParms.Order)\n  );\n\n  const hasNoSort = (linkName: string) => (\n    searchParams.get(SearchParms.Sort) !== linkName\n  );\n\n  const changeParamsClick = (linkName: string) => {\n    const newParams = new URLSearchParams(searchParams);\n\n    if (hasSortAsc(linkName)) {\n      newParams.set(SearchParms.Order, SortOrder.Desc);\n\n      return newParams.toString();\n    }\n\n    if (hasSortDesc(linkName)) {\n      newParams.delete(SearchParms.Order);\n      newParams.delete(SearchParms.Sort);\n\n      return newParams.toString();\n    }\n\n    newParams.set(SearchParms.Sort, linkName);\n    newParams.delete(SearchParms.Order);\n\n    return newParams.toString();\n  };\n\n  return (\n    <>\n      {people.length ? (\n        <table\n          data-cy=\"peopleTable\"\n          className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n        >\n          <thead>\n            <tr>\n              {Object.values(SortFields).map(columnName => (\n                <th key={columnName}>\n                  <span className=\"is-flex is-flex-wrap-nowrap is-capitalized\">\n                    {columnName}\n                    <Link to={{ search: changeParamsClick(columnName) }}>\n                      <span className=\"icon\">\n                        <i className={classNames('fas', {\n                          'fa-sort': hasNoSort(columnName),\n                          'fa-sort-up': hasSortAsc(columnName),\n                          'fa-sort-down': hasSortDesc(columnName),\n                        })}\n                        />\n                      </span>\n                    </Link>\n                  </span>\n                </th>\n              ))}\n              <th>Mother</th>\n              <th>Father</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {people.map(person => (\n              <tr\n                data-cy=\"person\"\n                key={person.slug}\n                className={classNames({\n                  'has-background-warning': slug === person.slug,\n                })}\n              >\n                <td>\n                  <PeopleLink person={person} />\n                </td>\n\n                <td>{person.sex}</td>\n                <td>{person.born}</td>\n                <td>{person.died}</td>\n                <td>\n                  <ParentsLink parentName={person.motherName} />\n                </td>\n                <td>\n                  <ParentsLink parentName={person.fatherName} />\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      ) : (\n        <p>There are no people matching the current search criteria</p>\n      )}\n    </>\n  );\n};\n","export enum SexFilter {\n  All = '',\n  Male = 'm',\n  Female = 'f',\n}\n\nexport enum SenturyFilter {\n  Sixteen = '16',\n  Seventeen = '17',\n  Eighteen = '18',\n  Nineteen = '19',\n  Twenty = '20',\n}\n","import { Link, useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { SexFilter, SenturyFilter } from '../types/FilterKeys';\nimport { SearchParms } from '../types/SearchParams';\n\nexport const PeopleFilters = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleCenturiesLink = (paramValue: string | null) => {\n    const newSerchParams = new URLSearchParams(searchParams);\n\n    if (!paramValue) {\n      newSerchParams.delete(SearchParms.Centuries);\n\n      return newSerchParams.toString();\n    }\n\n    const centuriesList = newSerchParams.getAll(SearchParms.Centuries);\n\n    if (centuriesList.includes(paramValue)) {\n      newSerchParams.delete(SearchParms.Centuries);\n      centuriesList\n        .filter(cent => cent !== paramValue)\n        .forEach(el => newSerchParams.append(SearchParms.Centuries, el));\n\n      return newSerchParams.toString();\n    }\n\n    newSerchParams.append(SearchParms.Centuries, paramValue);\n\n    return newSerchParams.toString();\n  };\n\n  const handleFilterLink = (paramKey: string, paramValue: string) => {\n    if (searchParams.get(paramKey) === paramValue) {\n      return searchParams.toString();\n    }\n\n    const newSerchParams = new URLSearchParams(searchParams);\n\n    if (!paramValue) {\n      newSerchParams.delete(paramKey);\n\n      return newSerchParams.toString();\n    }\n\n    newSerchParams.set(paramKey, paramValue);\n\n    return newSerchParams.toString();\n  };\n\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    event.preventDefault();\n\n    setSearchParams(handleFilterLink(SearchParms.Query, event.target.value));\n  };\n\n  const handleResetAllFilters = () => {\n    const newSerchParams = new URLSearchParams(searchParams);\n\n    newSerchParams.delete(SearchParms.Centuries);\n    newSerchParams.delete(SearchParms.Query);\n    newSerchParams.delete(SearchParms.Sex);\n\n    return newSerchParams.toString();\n  };\n\n  const isResetAllActive = searchParams.has(SearchParms.Sex)\n    || searchParams.has(SearchParms.Query)\n    || searchParams.has(SearchParms.Centuries);\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        {Object.entries(SexFilter).map(([key, value]) => (\n          <Link\n            to={{ search: handleFilterLink(SearchParms.Sex, value) }}\n            key={key}\n            className={classNames({\n              'is-active': value === searchParams.get(SearchParms.Sex)\n                || (value === SexFilter.All\n                  && !searchParams.has(SearchParms.Sex)),\n            })}\n          >\n            {key}\n          </Link>\n        ))}\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={searchParams.get(SearchParms.Query) ?? ''}\n            onChange={handleInputChange}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {Object.values(SenturyFilter).map(value => (\n              <Link\n                key={value}\n                data-cy=\"century\"\n                className={classNames('button', 'mr-1', {\n                  'is-info': searchParams\n                    .getAll(SearchParms.Centuries).includes(value),\n                })}\n                to={{ search: handleCenturiesLink(value) }}\n              >\n                {value}\n              </Link>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <Link\n              data-cy=\"centuryALL\"\n              className={classNames('button', 'is-success', {\n                'is-outlined': searchParams.has(SearchParms.Centuries),\n              })}\n              to={{ search: handleCenturiesLink(null) }}\n            >\n              All\n            </Link>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          className={classNames('button', 'is-link', 'is-fullwidth', {\n            'is-outlined': isResetAllActive,\n          })}\n          to={{ search: handleResetAllFilters() }}\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable';\nimport { PeopleContext } from '../../contexts/PeopleContext';\nimport { PeopleFilters } from '../PeopleFilters';\nimport { SearchParms } from '../../types/SearchParams';\nimport { SortFields } from '../../types/SortFields';\n\nexport const PeoplePage: React.FC = () => {\n  const [searchParams] = useSearchParams();\n  const { people, setPeople } = useContext(PeopleContext);\n  const [isLoad, setIsLoad] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const isShowLoad = isLoad && !isError && !people.length;\n  const isShowError = !isLoad && isError && !people.length;\n  const isShowNoPeople = !isLoad && !isError && !people.length;\n  const isShowPeople = !isLoad && !isError && !!people.length;\n\n  useEffect(() => {\n    setIsError(false);\n    setIsLoad(true);\n\n    (async () => {\n      try {\n        setPeople(await getPeople());\n      } catch {\n        setIsError(true);\n      } finally {\n        setIsLoad(false);\n      }\n    })();\n\n    return () => setPeople([]);\n  }, []);\n\n  const getModifiedPeople = () => {\n    const strSearchParams = searchParams?.toString();\n\n    if (!strSearchParams) {\n      return people;\n    }\n\n    const sortOrder = searchParams.has(SearchParms.Order) ? -1 : 1;\n    const sortKey = searchParams.get(SearchParms.Sort);\n\n    const modifiedPeople = people.slice().sort((person1, person2) => {\n      switch (sortKey) {\n        case SortFields.Name:\n        case SortFields.Sex:\n          return person1[sortKey].localeCompare(person2[sortKey]) * sortOrder;\n        case SortFields.Born:\n        case SortFields.Died:\n          return (person1[sortKey] - person2[sortKey]) * sortOrder;\n        default:\n          return 0;\n      }\n    });\n\n    const sexFilterParam = searchParams.get(SearchParms.Sex);\n    const centuriesFilterParam = searchParams.get(SearchParms.Centuries);\n    const queryFilterParam = searchParams.get(SearchParms.Query);\n\n    if (!sexFilterParam && !centuriesFilterParam && !queryFilterParam) {\n      return modifiedPeople;\n    }\n\n    return modifiedPeople.filter(({\n      sex,\n      name,\n      fatherName,\n      motherName,\n      born,\n    }) => {\n      let centuryCondition = true;\n\n      if (centuriesFilterParam) {\n        const centuriesList = searchParams.getAll(SearchParms.Centuries);\n\n        centuryCondition = centuriesList\n          .includes((born + 100).toString().slice(0, 2));\n      }\n\n      let sexCondition = true;\n\n      if (sexFilterParam) {\n        sexCondition = sex === sexFilterParam;\n      }\n\n      let queryCondition = true;\n\n      if (queryFilterParam) {\n        const validSexParam = queryFilterParam.trim().toLowerCase();\n\n        queryCondition = name.toLowerCase().includes(validSexParam)\n          || !!fatherName?.toLowerCase().includes(validSexParam)\n          || !!motherName?.toLowerCase().includes(validSexParam);\n      }\n\n      return centuryCondition && sexCondition && queryCondition;\n    });\n  };\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          {isShowPeople && (\n            <div className=\"column is-7-tablet is-narrow-desktop\">\n              <PeopleFilters />\n            </div>\n          )}\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isShowLoad && <Loader />}\n\n              {isShowError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {isShowNoPeople && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {isShowPeople && <PeopleTable people={getModifiedPeople()} />}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nconst handleNavLinkClass = ({ isActive }: { isActive: boolean }) => {\n  return classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n};\n\nexport const NavBar = () => {\n  return (\n    <>\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              className={handleNavLinkClass}\n              to=\"/\"\n            >\n              Home\n            </NavLink>\n\n            <NavLink\n              className={handleNavLinkClass}\n              to=\"/people\"\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Routes>\n      <Route path=\"/\" element={<NavBar />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"*\" element={<NotFoundPage />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n      </Route>\n    </Routes>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeopleProvider } from './contexts/PeopleContext';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <PeopleProvider>\n      <Router>\n        <App />\n      </Router>\n    </PeopleProvider>,\n  );\n"],"sourceRoot":""}